'''
* Dictionary
-> 파이썬에서는 사전과 비슷한 형태의 자료형을 제공하는데 이름 그대로 딕셔너리(dictionary)라고 부릅니다
(딕셔너리 자료형은 서로 연관 관계가 있는 값을 묶어서 표현할 때 사용)

* 딕셔너리 = {키1: 값1, 키2: 값2} -- 기본구조

- 딕셔너리 = dict(키1=값2, 키2=값2)
- 딕셔너리 = dict(zip([키1, 키2], [값1, 값2]))
- 딕셔너리 = dict([(키1, 값1), (키2, 값2)])
- 딕셔너리 = dict({키2: 값1, 키2: 값2})

'''


# 1. 딕셔너리 만들기
x = {'a' : 30, 'b' : 20, 'c' : 40, 'd' : 45}
print(x)
print(x['b']) # 키가 'b'인 값을 출력하라 (20이 출력됨)
#딕셔너리에 키와 값을 저장할 때 키가 중복되면 가장 뒤에 있는 값만 사용.

d = {}
print(d)

c = dict()
print(c)

# 2. 키 = 값 형식으로 딕셔너리 만들기
x1 = dict(a=10, b=20, c=30)
print(x1) #{'a': 10, 'b': 20, 'c': 30}

# 3. dict에서 zip 함수를 이용하여 리스트 두 개를 딕셔너리로 만드는 방법
x2 =  dict(zip(['a', 'b', 'c'], [10, 20, 30]))
print(x2)

# 응용!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! zip, range로 딕셔너리 만들기
yang = dict(zip(range(1,11), [2**i for i in range(1,11)]))
print(' 2의 거듭제곱 리스트를 만들기 : {0}'.format(yang))

# 4. 리스트 안에 (키, 값) 형식의 튜플을 나열하는 방법
x3 = dict([('a', 10), ('b', 20), ('c', 30)])
print(x3)

# 5. dict 안에서 중괄호로 딕셔너리를 생성하는 방법
x4 = dict({'a':34, 'b': 45, 'c': 55})
print(x4)